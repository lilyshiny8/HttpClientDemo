package JavaSyntax;
/*
都是类的结构设计
关键字：  abstract class 类名称{}                          -----  interface 接口名称{}
结构组成： 抽象方法、普通方法、全局常量、全局变量、属性、构造方法   -----  抽象方法、全局常量
权限：    可以使用各种权限                                  -----  只能使用public
子类使用： 子类利用extends关键字来继承抽象类                   -----  子类利用implements关键字来实现接口
关系：    一个抽象类可以实现若干个接口                         -----  一个接口不能够继承抽象类，但是可以使用extends来继承多个父接口
子类：    一个子类只能够继承一个抽象类                         -----  一个子类可以实现多个接口
除了单继承的局限之外，实际上使用抽象类和接口都是类似的。但是实际开发中，抽象类的设计要比接口复杂。

结构体：（各个结构的设计关系）
类
对象
抽象类
接口

1、接口是Java的核心
2，开发之中优先考虑接口，以避免单继承局限
 */

public class part2_73_抽象类和接口的区别 {
}
